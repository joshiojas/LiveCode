name: Build and Release LiveCode

on:
  push:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows] # Target operating systems
        goarch: [amd64, arm64] # Target architectures

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20 # Or your desired version

      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOPATH: ${{ github.workspace }}
        run: |
          go get .
          # Add -ldflags="-s -w" to strip and reduce binary size
          go build -o LiveCode-${{ matrix.goos }}-${{ matrix.goarch }} -ldflags="-s -w"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LiveCode-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: LiveCode-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
